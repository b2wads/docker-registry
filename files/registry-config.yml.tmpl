version: 0.1

auth:
  htpasswd:
    realm: Registry
    path: /etc/docker/registry/htpasswd

{{ if .DOCKER_REGISTRY_ENABLE_JSON_LOGS }}
log:
  accesslog:
    disabled: true
  {{ if .REGISTRY_LOG_LEVEL }}
  level: {{.REGISTRY_LOG_LEVEL}}
  {{ else }}
  level: info
  {{ end }}
  formatter: json
  fields:
      service: registry
{{ end }}

storage:
{{ if .REGISTRY_STORAGE_CACHE_ENABLE }}
    cache:
        blobdescriptor: redis
{{ end }}

{{if .REGISTRY_STORAGE_FILESYSTEM_ENABLE }}
    filesystem:
    {{if .REGISTRY_STORAGE_FILESYSTEM_ROOT_DIR }}
        rootdirectory: {{.REGISTRY_STORAGE_FILESYSTEM_ROOT_DIR}}
    {{else}}
        rootdirectory: /var/lib/registry
  {{end}}
{{end}}

{{ if .REGISTRY_STORAGE_S3_ENABLE }}
    s3:
        accesskey: {{.REGISTRY_STORAGE_S3_ACCESS_KEY_ID}}
        secretkey: {{.REGISTRY_STORAGE_S3_ACCESS_KEY_SECRET}}
        region: {{.REGISTRY_STORAGE_S3_REGION}}
        bucket: {{.REGISTRY_STORAGE_S3_BUCKET}}
        encrypt: false
        secure: true
        v4auth: true
        chunksize: 5242880
        rootdirectory: images
{{ end }}

{{ if .REGISTRY_STORAGE_GCS_ENABLE }}
    gcs:
       bucket: docker-registry
       keyfile: /path/to/keyfile
       credentials:
         type: service_account
         project_id: project_id_string
         private_key_id: private_key_id_string
         private_key: private_key_string
         client_email: client@example.com
         client_id: client_id_string
         auth_uri: http://example.com/auth_uri
         token_uri: http://example.com/token_uri
         auth_provider_x509_cert_url: http://example.com/provider_cert_url
         client_x509_cert_url: http://example.com/client_cert_url
       rootdirectory: /gcs/object/name/prefix
       chunksize: 5242880
{{ end }}
    delete:
        enabled: true

{{ if .REGISTRY_STORAGE_CACHE_ENABLE }}
redis:
    addr: {{.REGISTRY_REDIS_ADDRESS}}
{{ end }}
http:
    addr: :80
